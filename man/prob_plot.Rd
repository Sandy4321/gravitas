% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prob_plot.R
\name{prob_plot}
\alias{prob_plot}
\title{Plot probability distribution of univariate series across bivariate temporal granularities}
\usage{
prob_plot(.data, gran1 = NULL, gran2 = NULL, hierarchy_tbl = NULL,
  response = NULL, plot_type = NULL, quantile_prob = c(0.01, 0.1,
  0.25, 0.5, 0.75, 0.9, 0.99), facet_h = NULL, symmetric = TRUE,
  alpha = 0.8, ...)
}
\arguments{
\item{.data}{a tsibble}

\item{gran1}{the lower level granularity to be paired}

\item{gran2}{the upper level granularity to be paired}

\item{hierarchy_tbl}{A hierarchy table specifying the hierarchy of units and their relationships}

\item{response}{response variable to be plotted}

\item{plot_type}{type of distribution plot}

\item{quantile_prob}{numeric vector of probabilities with value in [0,1]  whose sample quantiles are wanted. Default is set to "Decile" plot}

\item{facet_h}{levels of facet variable for which facetting is allowed while plotting bivariate temporal granularities}

\item{symmetric}{If TRUE, symmetic quantile area plot is drawn. If FALSE, only quantile lines are drawn instead of area. If TRUE, length of quantile_prob should be odd and ideally the quantile_prob should be a symmetric vector with median at the middle position.}

\item{alpha}{level of transperancy for the quantile area}

\item{...}{other arguments to be passed for appropriate labels}
}
\value{
a ggplot object
}
\description{
Plot probability distribution of univariate series across bivariate temporal granularities
}
\examples{
library(gravitas)
library(tsibbledata)
library(dplyr)
library(tsibble)
library(ggplot2)

vic_elec \%>\% prob_plot(
  gran1 = "hour_day", gran2 = "day_week",
  response = "Demand", plot_type = "quantile",
  quantile_prob = c(0.1, 0.25, 0.5, 0.75, 0.9),
  symmetric = TRUE, outlier.colour = "red", outlier.shape = 2, palette = "Dark2"
)

cricket_tsibble <- cricketdata \%>\%
  mutate(data_index = row_number()) \%>\%
  as_tsibble(index = data_index)

hierarchy_model <- tibble::tibble(
  units = c("index", "ball", "over", "inning", "match"),
  convert_fct = c(1, 6, 20, 2, 1)
)

cricket_tsibble \%>\%
  prob_plot("inning_match", "over_inning",
    hierarchy_tbl = hierarchy_model,
    response = "total_runs",
    plot_type = "lv",
    quantile_prob = c(0.1, 0.25, 0.5, 0.75, 0.9), symmetric = FALSE
  )
}
